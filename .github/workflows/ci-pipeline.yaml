name: CI pipeline
run-name: ${{ github.actor }}
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Give execute permission to gradlew
        run: chmod +x gradlew

      - name: List all files in the repository
        run: ls -R

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Verify Docker Compose installation
        run: docker-compose --version

      - name: List files in the docker directory
        run: ls -l docker/

      - name: Start PostgreSQL and Kafka with Docker Compose
        run: |
          docker-compose -f docker-compose.yaml up -d
        working-directory: ./docker
      - name: Wait for Kafka to be ready
        run: |
          echo "Waiting for Kafka to be ready..."
          sleep 20
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Run Tests
        run: ./gradlew test

      - name: Start Spring Boot Application in Background
        run: |
            nohup ./gradlew bootRun &
            echo $! > springboot.pid

      - name: Stop Spring Boot Application
        run: |
            kill $(cat springboot.pid)

      - name: Stop Docker Compose
        if: always()
        run: |
          docker-compose -f docker-compose.yaml down
        working-directory: ./docker

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t phfontess/pastry-order-service:${{ github.sha }} .

      - name: Tag Docker Image
        run: |
          docker tag phfontess/pastry-order-service:${{ github.sha }} phfontess/pastry-order-service:latest

      - name: Push Docker Image
        run: |
          docker push phfontess/pastry-order-service:${{ github.sha }}
          docker push phfontess/pastry-order-service:latest